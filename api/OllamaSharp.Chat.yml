### YamlMime:ManagedReference
items:
- uid: OllamaSharp.Chat
  commentId: T:OllamaSharp.Chat
  id: Chat
  parent: OllamaSharp
  children:
  - OllamaSharp.Chat.#ctor(OllamaSharp.IOllamaApiClient,System.String)
  - OllamaSharp.Chat.Client
  - OllamaSharp.Chat.Messages
  - OllamaSharp.Chat.Model
  - OllamaSharp.Chat.Options
  - OllamaSharp.Chat.SendAsAsync(OllamaSharp.Models.Chat.ChatRole,System.String,System.Collections.Generic.IEnumerable{System.Collections.Generic.IEnumerable{System.Byte}},System.Threading.CancellationToken)
  - OllamaSharp.Chat.SendAsAsync(OllamaSharp.Models.Chat.ChatRole,System.String,System.Collections.Generic.IEnumerable{System.String},System.Threading.CancellationToken)
  - OllamaSharp.Chat.SendAsAsync(OllamaSharp.Models.Chat.ChatRole,System.String,System.Collections.Generic.IReadOnlyCollection{OllamaSharp.Models.Chat.Tool},System.Collections.Generic.IEnumerable{System.String},System.Threading.CancellationToken)
  - OllamaSharp.Chat.SendAsAsync(OllamaSharp.Models.Chat.ChatRole,System.String,System.Threading.CancellationToken)
  - OllamaSharp.Chat.SendAsync(System.String,System.Collections.Generic.IEnumerable{System.Collections.Generic.IEnumerable{System.Byte}},System.Threading.CancellationToken)
  - OllamaSharp.Chat.SendAsync(System.String,System.Collections.Generic.IEnumerable{System.String},System.Threading.CancellationToken)
  - OllamaSharp.Chat.SendAsync(System.String,System.Collections.Generic.IReadOnlyCollection{OllamaSharp.Models.Chat.Tool},System.Collections.Generic.IEnumerable{System.String},System.Threading.CancellationToken)
  - OllamaSharp.Chat.SendAsync(System.String,System.Threading.CancellationToken)
  langs:
  - csharp
  - vb
  name: Chat
  nameWithType: Chat
  fullName: OllamaSharp.Chat
  type: Class
  source:
    remote:
      path: src/Chat.cs
      branch: feature/add-documentation
      repo: https://github.com/JerrettDavis/OllamaSharp.git
    id: Chat
    path: src/Chat.cs
    startLine: 40
  assemblies:
  - OllamaSharp
  namespace: OllamaSharp
  summary: >-
    A chat helper that handles the chat logic internally and

    automatically extends the message history.


    <example>

    A simple interactive chat can be implemented in just a handful of lines:

    <pre><code class="lang-csharp">var ollama = new OllamaApiClient("http://localhost:11434", "llama3.2-vision:latest");

    var chat = new Chat(ollama);

    // ...

    while (true)

    {
    	Console.Write("You: ");
    	var message = Console.ReadLine()!;
    	Console.Write("Ollama: ");
    	await foreach (var answerToken in chat.SendAsync(message))
    		Console.Write(answerToken);
    	// ...
    	Console.WriteLine();
    }

    // ...

    // Output:

    // You: Write a haiku about AI models

    // Ollama: Code whispers secrets

    //   Intelligent designs unfold

    //   Minds beyond our own</code></pre></example>
  example: []
  syntax:
    content: public class Chat
    content.vb: Public Class Chat
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
- uid: OllamaSharp.Chat.Messages
  commentId: P:OllamaSharp.Chat.Messages
  id: Messages
  parent: OllamaSharp.Chat
  langs:
  - csharp
  - vb
  name: Messages
  nameWithType: Chat.Messages
  fullName: OllamaSharp.Chat.Messages
  type: Property
  source:
    remote:
      path: src/Chat.cs
      branch: feature/add-documentation
      repo: https://github.com/JerrettDavis/OllamaSharp.git
    id: Messages
    path: src/Chat.cs
    startLine: 45
  assemblies:
  - OllamaSharp
  namespace: OllamaSharp
  summary: Gets or sets the messages of the chat history
  example: []
  syntax:
    content: public List<Message> Messages { get; set; }
    parameters: []
    return:
      type: System.Collections.Generic.List{OllamaSharp.Models.Chat.Message}
    content.vb: Public Property Messages As List(Of Message)
  overload: OllamaSharp.Chat.Messages*
- uid: OllamaSharp.Chat.Client
  commentId: P:OllamaSharp.Chat.Client
  id: Client
  parent: OllamaSharp.Chat
  langs:
  - csharp
  - vb
  name: Client
  nameWithType: Chat.Client
  fullName: OllamaSharp.Chat.Client
  type: Property
  source:
    remote:
      path: src/Chat.cs
      branch: feature/add-documentation
      repo: https://github.com/JerrettDavis/OllamaSharp.git
    id: Client
    path: src/Chat.cs
    startLine: 50
  assemblies:
  - OllamaSharp
  namespace: OllamaSharp
  summary: Gets the Ollama API client
  example: []
  syntax:
    content: public IOllamaApiClient Client { get; }
    parameters: []
    return:
      type: OllamaSharp.IOllamaApiClient
    content.vb: Public ReadOnly Property Client As IOllamaApiClient
  overload: OllamaSharp.Chat.Client*
- uid: OllamaSharp.Chat.Model
  commentId: P:OllamaSharp.Chat.Model
  id: Model
  parent: OllamaSharp.Chat
  langs:
  - csharp
  - vb
  name: Model
  nameWithType: Chat.Model
  fullName: OllamaSharp.Chat.Model
  type: Property
  source:
    remote:
      path: src/Chat.cs
      branch: feature/add-documentation
      repo: https://github.com/JerrettDavis/OllamaSharp.git
    id: Model
    path: src/Chat.cs
    startLine: 55
  assemblies:
  - OllamaSharp
  namespace: OllamaSharp
  summary: Gets or sets the AI model to chat with
  example: []
  syntax:
    content: public string Model { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: Public Property Model As String
  overload: OllamaSharp.Chat.Model*
- uid: OllamaSharp.Chat.Options
  commentId: P:OllamaSharp.Chat.Options
  id: Options
  parent: OllamaSharp.Chat
  langs:
  - csharp
  - vb
  name: Options
  nameWithType: Chat.Options
  fullName: OllamaSharp.Chat.Options
  type: Property
  source:
    remote:
      path: src/Chat.cs
      branch: feature/add-documentation
      repo: https://github.com/JerrettDavis/OllamaSharp.git
    id: Options
    path: src/Chat.cs
    startLine: 60
  assemblies:
  - OllamaSharp
  namespace: OllamaSharp
  summary: Gets or sets the RequestOptions to chat with
  example: []
  syntax:
    content: public RequestOptions? Options { get; set; }
    parameters: []
    return:
      type: OllamaSharp.Models.RequestOptions
    content.vb: Public Property Options As RequestOptions
  overload: OllamaSharp.Chat.Options*
- uid: OllamaSharp.Chat.#ctor(OllamaSharp.IOllamaApiClient,System.String)
  commentId: M:OllamaSharp.Chat.#ctor(OllamaSharp.IOllamaApiClient,System.String)
  id: '#ctor(OllamaSharp.IOllamaApiClient,System.String)'
  parent: OllamaSharp.Chat
  langs:
  - csharp
  - vb
  name: Chat(IOllamaApiClient, string)
  nameWithType: Chat.Chat(IOllamaApiClient, string)
  fullName: OllamaSharp.Chat.Chat(OllamaSharp.IOllamaApiClient, string)
  type: Constructor
  source:
    remote:
      path: src/Chat.cs
      branch: feature/add-documentation
      repo: https://github.com/JerrettDavis/OllamaSharp.git
    id: .ctor
    path: src/Chat.cs
    startLine: 78
  assemblies:
  - OllamaSharp
  namespace: OllamaSharp
  summary: Creates a new chat instance
  example:
  - >-
    Setting up a chat with a system prompt:

    <pre><code class="lang-csharp">var client = new OllamaApiClient("http://localhost:11434", "llama3.2-vision:latest");

    var prompt = "You are a helpful assistant that will answer any question you are asked.";

    var chat = new Chat(client, prompt);</code></pre>
  syntax:
    content: public Chat(IOllamaApiClient client, string systemPrompt = "")
    parameters:
    - id: client
      type: OllamaSharp.IOllamaApiClient
      description: The Ollama client to use for the chat
    - id: systemPrompt
      type: System.String
      description: An optional system prompt to define the behavior of the chat assistant
    content.vb: Public Sub New(client As IOllamaApiClient, systemPrompt As String = "")
  overload: OllamaSharp.Chat.#ctor*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: If the client is null, an <xref href="System.ArgumentNullException" data-throw-if-not-resolved="false"></xref> is thrown.
  nameWithType.vb: Chat.New(IOllamaApiClient, String)
  fullName.vb: OllamaSharp.Chat.New(OllamaSharp.IOllamaApiClient, String)
  name.vb: New(IOllamaApiClient, String)
- uid: OllamaSharp.Chat.SendAsync(System.String,System.Threading.CancellationToken)
  commentId: M:OllamaSharp.Chat.SendAsync(System.String,System.Threading.CancellationToken)
  id: SendAsync(System.String,System.Threading.CancellationToken)
  parent: OllamaSharp.Chat
  langs:
  - csharp
  - vb
  name: SendAsync(string, CancellationToken)
  nameWithType: Chat.SendAsync(string, CancellationToken)
  fullName: OllamaSharp.Chat.SendAsync(string, System.Threading.CancellationToken)
  type: Method
  source:
    remote:
      path: src/Chat.cs
      branch: feature/add-documentation
      repo: https://github.com/JerrettDavis/OllamaSharp.git
    id: SendAsync
    path: src/Chat.cs
    startLine: 101
  assemblies:
  - OllamaSharp
  namespace: OllamaSharp
  summary: Sends a message to the currently selected model and streams its response
  example:
  - >-
    Getting a response from the model:

    <pre><code class="lang-csharp">var response = await chat.SendAsync("Write a haiku about AI models");

    await foreach (var answerToken in response)
    	 Console.WriteLine(answerToken);</code></pre>
  syntax:
    content: public IAsyncEnumerable<string> SendAsync(string message, CancellationToken cancellationToken = default)
    parameters:
    - id: message
      type: System.String
      description: The message to send
    - id: cancellationToken
      type: System.Threading.CancellationToken
      description: The token to cancel the operation with
    return:
      type: System.Collections.Generic.IAsyncEnumerable{System.String}
      description: An <xref href="System.Collections.Generic.IAsyncEnumerable%601" data-throw-if-not-resolved="false"></xref> that streams the response.
    content.vb: Public Function SendAsync(message As String, cancellationToken As CancellationToken = Nothing) As IAsyncEnumerable(Of String)
  overload: OllamaSharp.Chat.SendAsync*
  nameWithType.vb: Chat.SendAsync(String, CancellationToken)
  fullName.vb: OllamaSharp.Chat.SendAsync(String, System.Threading.CancellationToken)
  name.vb: SendAsync(String, CancellationToken)
- uid: OllamaSharp.Chat.SendAsync(System.String,System.Collections.Generic.IEnumerable{System.Collections.Generic.IEnumerable{System.Byte}},System.Threading.CancellationToken)
  commentId: M:OllamaSharp.Chat.SendAsync(System.String,System.Collections.Generic.IEnumerable{System.Collections.Generic.IEnumerable{System.Byte}},System.Threading.CancellationToken)
  id: SendAsync(System.String,System.Collections.Generic.IEnumerable{System.Collections.Generic.IEnumerable{System.Byte}},System.Threading.CancellationToken)
  parent: OllamaSharp.Chat
  langs:
  - csharp
  - vb
  name: SendAsync(string, IEnumerable<IEnumerable<byte>>?, CancellationToken)
  nameWithType: Chat.SendAsync(string, IEnumerable<IEnumerable<byte>>?, CancellationToken)
  fullName: OllamaSharp.Chat.SendAsync(string, System.Collections.Generic.IEnumerable<System.Collections.Generic.IEnumerable<byte>>?, System.Threading.CancellationToken)
  type: Method
  source:
    remote:
      path: src/Chat.cs
      branch: feature/add-documentation
      repo: https://github.com/JerrettDavis/OllamaSharp.git
    id: SendAsync
    path: src/Chat.cs
    startLine: 128
  assemblies:
  - OllamaSharp
  namespace: OllamaSharp
  summary: Sends a message to the currently selected model and streams its response
  example:
  - >-
    Getting a response from the model with an image:

    <pre><code class="lang-csharp">var client = new HttpClient();

    var cat = await client.GetByteArrayAsync("https://cataas.com/cat");

    var ollama = new OllamaApiClient("http://localhost:11434", "llama3.2-vision:latest");

    var chat = new Chat(ollama);

    var response = chat.SendAsync("What do you see?", [cat]);

    await foreach (var answerToken in response) Console.Write(answerToken);


    // Output: The image shows a white kitten with black markings on its

    //         head and tail, sitting next to an orange tabby cat. The kitten

    //         is looking at the camera while the tabby cat appears to be

    //         sleeping or resting with its eyes closed. The two cats are

    //         lying in a blanket that has been rumpled up.</code></pre>
  syntax:
    content: public IAsyncEnumerable<string> SendAsync(string message, IEnumerable<IEnumerable<byte>>? imagesAsBytes, CancellationToken cancellationToken = default)
    parameters:
    - id: message
      type: System.String
      description: The message to send
    - id: imagesAsBytes
      type: System.Collections.Generic.IEnumerable{System.Collections.Generic.IEnumerable{System.Byte}}
      description: Images in byte representation to send to the model
    - id: cancellationToken
      type: System.Threading.CancellationToken
      description: The token to cancel the operation with
    return:
      type: System.Collections.Generic.IAsyncEnumerable{System.String}
      description: An <xref href="System.Collections.Generic.IAsyncEnumerable%601" data-throw-if-not-resolved="false"></xref> that streams the response.
    content.vb: Public Function SendAsync(message As String, imagesAsBytes As IEnumerable(Of IEnumerable(Of Byte)), cancellationToken As CancellationToken = Nothing) As IAsyncEnumerable(Of String)
  overload: OllamaSharp.Chat.SendAsync*
  nameWithType.vb: Chat.SendAsync(String, IEnumerable(Of IEnumerable(Of Byte)), CancellationToken)
  fullName.vb: OllamaSharp.Chat.SendAsync(String, System.Collections.Generic.IEnumerable(Of System.Collections.Generic.IEnumerable(Of Byte)), System.Threading.CancellationToken)
  name.vb: SendAsync(String, IEnumerable(Of IEnumerable(Of Byte)), CancellationToken)
- uid: OllamaSharp.Chat.SendAsync(System.String,System.Collections.Generic.IEnumerable{System.String},System.Threading.CancellationToken)
  commentId: M:OllamaSharp.Chat.SendAsync(System.String,System.Collections.Generic.IEnumerable{System.String},System.Threading.CancellationToken)
  id: SendAsync(System.String,System.Collections.Generic.IEnumerable{System.String},System.Threading.CancellationToken)
  parent: OllamaSharp.Chat
  langs:
  - csharp
  - vb
  name: SendAsync(string, IEnumerable<string>?, CancellationToken)
  nameWithType: Chat.SendAsync(string, IEnumerable<string>?, CancellationToken)
  fullName: OllamaSharp.Chat.SendAsync(string, System.Collections.Generic.IEnumerable<string>?, System.Threading.CancellationToken)
  type: Method
  source:
    remote:
      path: src/Chat.cs
      branch: feature/add-documentation
      repo: https://github.com/JerrettDavis/OllamaSharp.git
    id: SendAsync
    path: src/Chat.cs
    startLine: 156
  assemblies:
  - OllamaSharp
  namespace: OllamaSharp
  summary: Sends a message to the currently selected model and streams its response
  example:
  - >-
    Getting a response from the model with an image:

    <pre><code class="lang-csharp">var client = new HttpClient();

    var cat = await client.GetByteArrayAsync("https://cataas.com/cat");

    var base64Cat = Convert.ToBase64String(cat);

    var ollama = new OllamaApiClient("http://localhost:11434", "llama3.2-vision:latest");

    var chat = new Chat(ollama);

    var response = chat.SendAsync("What do you see?", [base64Cat]);

    await foreach (var answerToken in response) Console.Write(answerToken);


    // Output:

    // The image shows a cat lying on the floor next to an iPad. The cat is looking

    // at the screen, which displays a game with fish and other sea creatures. The

    // cat's paw is touching the screen, as if it is playing the game. The background

    // of the image is a wooden floor.</code></pre>
  syntax:
    content: public IAsyncEnumerable<string> SendAsync(string message, IEnumerable<string>? imagesAsBase64, CancellationToken cancellationToken = default)
    parameters:
    - id: message
      type: System.String
      description: The message to send
    - id: imagesAsBase64
      type: System.Collections.Generic.IEnumerable{System.String}
      description: Base64 encoded images to send to the model
    - id: cancellationToken
      type: System.Threading.CancellationToken
      description: The token to cancel the operation with
    return:
      type: System.Collections.Generic.IAsyncEnumerable{System.String}
      description: An <xref href="System.Collections.Generic.IAsyncEnumerable%601" data-throw-if-not-resolved="false"></xref> that streams the response.
    content.vb: Public Function SendAsync(message As String, imagesAsBase64 As IEnumerable(Of String), cancellationToken As CancellationToken = Nothing) As IAsyncEnumerable(Of String)
  overload: OllamaSharp.Chat.SendAsync*
  nameWithType.vb: Chat.SendAsync(String, IEnumerable(Of String), CancellationToken)
  fullName.vb: OllamaSharp.Chat.SendAsync(String, System.Collections.Generic.IEnumerable(Of String), System.Threading.CancellationToken)
  name.vb: SendAsync(String, IEnumerable(Of String), CancellationToken)
- uid: OllamaSharp.Chat.SendAsync(System.String,System.Collections.Generic.IReadOnlyCollection{OllamaSharp.Models.Chat.Tool},System.Collections.Generic.IEnumerable{System.String},System.Threading.CancellationToken)
  commentId: M:OllamaSharp.Chat.SendAsync(System.String,System.Collections.Generic.IReadOnlyCollection{OllamaSharp.Models.Chat.Tool},System.Collections.Generic.IEnumerable{System.String},System.Threading.CancellationToken)
  id: SendAsync(System.String,System.Collections.Generic.IReadOnlyCollection{OllamaSharp.Models.Chat.Tool},System.Collections.Generic.IEnumerable{System.String},System.Threading.CancellationToken)
  parent: OllamaSharp.Chat
  langs:
  - csharp
  - vb
  name: SendAsync(string, IReadOnlyCollection<Tool>?, IEnumerable<string>?, CancellationToken)
  nameWithType: Chat.SendAsync(string, IReadOnlyCollection<Tool>?, IEnumerable<string>?, CancellationToken)
  fullName: OllamaSharp.Chat.SendAsync(string, System.Collections.Generic.IReadOnlyCollection<OllamaSharp.Models.Chat.Tool>?, System.Collections.Generic.IEnumerable<string>?, System.Threading.CancellationToken)
  type: Method
  source:
    remote:
      path: src/Chat.cs
      branch: feature/add-documentation
      repo: https://github.com/JerrettDavis/OllamaSharp.git
    id: SendAsync
    path: src/Chat.cs
    startLine: 166
  assemblies:
  - OllamaSharp
  namespace: OllamaSharp
  summary: Sends a message to the currently selected model and streams its response
  example: []
  syntax:
    content: public IAsyncEnumerable<string> SendAsync(string message, IReadOnlyCollection<Tool>? tools, IEnumerable<string>? imagesAsBase64 = null, CancellationToken cancellationToken = default)
    parameters:
    - id: message
      type: System.String
      description: The message to send
    - id: tools
      type: System.Collections.Generic.IReadOnlyCollection{OllamaSharp.Models.Chat.Tool}
      description: Tools that the model can make use of, see https://ollama.com/blog/tool-support. By using tools, response streaming is automatically turned off
    - id: imagesAsBase64
      type: System.Collections.Generic.IEnumerable{System.String}
      description: Base64 encoded images to send to the model
    - id: cancellationToken
      type: System.Threading.CancellationToken
      description: The token to cancel the operation with
    return:
      type: System.Collections.Generic.IAsyncEnumerable{System.String}
    content.vb: Public Function SendAsync(message As String, tools As IReadOnlyCollection(Of Tool), imagesAsBase64 As IEnumerable(Of String) = Nothing, cancellationToken As CancellationToken = Nothing) As IAsyncEnumerable(Of String)
  overload: OllamaSharp.Chat.SendAsync*
  nameWithType.vb: Chat.SendAsync(String, IReadOnlyCollection(Of Tool), IEnumerable(Of String), CancellationToken)
  fullName.vb: OllamaSharp.Chat.SendAsync(String, System.Collections.Generic.IReadOnlyCollection(Of OllamaSharp.Models.Chat.Tool), System.Collections.Generic.IEnumerable(Of String), System.Threading.CancellationToken)
  name.vb: SendAsync(String, IReadOnlyCollection(Of Tool), IEnumerable(Of String), CancellationToken)
- uid: OllamaSharp.Chat.SendAsAsync(OllamaSharp.Models.Chat.ChatRole,System.String,System.Threading.CancellationToken)
  commentId: M:OllamaSharp.Chat.SendAsAsync(OllamaSharp.Models.Chat.ChatRole,System.String,System.Threading.CancellationToken)
  id: SendAsAsync(OllamaSharp.Models.Chat.ChatRole,System.String,System.Threading.CancellationToken)
  parent: OllamaSharp.Chat
  langs:
  - csharp
  - vb
  name: SendAsAsync(ChatRole, string, CancellationToken)
  nameWithType: Chat.SendAsAsync(ChatRole, string, CancellationToken)
  fullName: OllamaSharp.Chat.SendAsAsync(OllamaSharp.Models.Chat.ChatRole, string, System.Threading.CancellationToken)
  type: Method
  source:
    remote:
      path: src/Chat.cs
      branch: feature/add-documentation
      repo: https://github.com/JerrettDavis/OllamaSharp.git
    id: SendAsAsync
    path: src/Chat.cs
    startLine: 175
  assemblies:
  - OllamaSharp
  namespace: OllamaSharp
  summary: Sends a message in a given role to the currently selected model and streams its response
  example: []
  syntax:
    content: public IAsyncEnumerable<string> SendAsAsync(ChatRole role, string message, CancellationToken cancellationToken = default)
    parameters:
    - id: role
      type: OllamaSharp.Models.Chat.ChatRole
      description: The role in which the message should be sent
    - id: message
      type: System.String
      description: The message to send
    - id: cancellationToken
      type: System.Threading.CancellationToken
      description: The token to cancel the operation with
    return:
      type: System.Collections.Generic.IAsyncEnumerable{System.String}
    content.vb: Public Function SendAsAsync(role As ChatRole, message As String, cancellationToken As CancellationToken = Nothing) As IAsyncEnumerable(Of String)
  overload: OllamaSharp.Chat.SendAsAsync*
  nameWithType.vb: Chat.SendAsAsync(ChatRole, String, CancellationToken)
  fullName.vb: OllamaSharp.Chat.SendAsAsync(OllamaSharp.Models.Chat.ChatRole, String, System.Threading.CancellationToken)
  name.vb: SendAsAsync(ChatRole, String, CancellationToken)
- uid: OllamaSharp.Chat.SendAsAsync(OllamaSharp.Models.Chat.ChatRole,System.String,System.Collections.Generic.IEnumerable{System.Collections.Generic.IEnumerable{System.Byte}},System.Threading.CancellationToken)
  commentId: M:OllamaSharp.Chat.SendAsAsync(OllamaSharp.Models.Chat.ChatRole,System.String,System.Collections.Generic.IEnumerable{System.Collections.Generic.IEnumerable{System.Byte}},System.Threading.CancellationToken)
  id: SendAsAsync(OllamaSharp.Models.Chat.ChatRole,System.String,System.Collections.Generic.IEnumerable{System.Collections.Generic.IEnumerable{System.Byte}},System.Threading.CancellationToken)
  parent: OllamaSharp.Chat
  langs:
  - csharp
  - vb
  name: SendAsAsync(ChatRole, string, IEnumerable<IEnumerable<byte>>?, CancellationToken)
  nameWithType: Chat.SendAsAsync(ChatRole, string, IEnumerable<IEnumerable<byte>>?, CancellationToken)
  fullName: OllamaSharp.Chat.SendAsAsync(OllamaSharp.Models.Chat.ChatRole, string, System.Collections.Generic.IEnumerable<System.Collections.Generic.IEnumerable<byte>>?, System.Threading.CancellationToken)
  type: Method
  source:
    remote:
      path: src/Chat.cs
      branch: feature/add-documentation
      repo: https://github.com/JerrettDavis/OllamaSharp.git
    id: SendAsAsync
    path: src/Chat.cs
    startLine: 185
  assemblies:
  - OllamaSharp
  namespace: OllamaSharp
  summary: Sends a message in a given role to the currently selected model and streams its response
  example: []
  syntax:
    content: public IAsyncEnumerable<string> SendAsAsync(ChatRole role, string message, IEnumerable<IEnumerable<byte>>? imagesAsBytes, CancellationToken cancellationToken = default)
    parameters:
    - id: role
      type: OllamaSharp.Models.Chat.ChatRole
      description: The role in which the message should be sent
    - id: message
      type: System.String
      description: The message to send
    - id: imagesAsBytes
      type: System.Collections.Generic.IEnumerable{System.Collections.Generic.IEnumerable{System.Byte}}
      description: Images in byte representation to send to the model
    - id: cancellationToken
      type: System.Threading.CancellationToken
      description: The token to cancel the operation with
    return:
      type: System.Collections.Generic.IAsyncEnumerable{System.String}
    content.vb: Public Function SendAsAsync(role As ChatRole, message As String, imagesAsBytes As IEnumerable(Of IEnumerable(Of Byte)), cancellationToken As CancellationToken = Nothing) As IAsyncEnumerable(Of String)
  overload: OllamaSharp.Chat.SendAsAsync*
  nameWithType.vb: Chat.SendAsAsync(ChatRole, String, IEnumerable(Of IEnumerable(Of Byte)), CancellationToken)
  fullName.vb: OllamaSharp.Chat.SendAsAsync(OllamaSharp.Models.Chat.ChatRole, String, System.Collections.Generic.IEnumerable(Of System.Collections.Generic.IEnumerable(Of Byte)), System.Threading.CancellationToken)
  name.vb: SendAsAsync(ChatRole, String, IEnumerable(Of IEnumerable(Of Byte)), CancellationToken)
- uid: OllamaSharp.Chat.SendAsAsync(OllamaSharp.Models.Chat.ChatRole,System.String,System.Collections.Generic.IEnumerable{System.String},System.Threading.CancellationToken)
  commentId: M:OllamaSharp.Chat.SendAsAsync(OllamaSharp.Models.Chat.ChatRole,System.String,System.Collections.Generic.IEnumerable{System.String},System.Threading.CancellationToken)
  id: SendAsAsync(OllamaSharp.Models.Chat.ChatRole,System.String,System.Collections.Generic.IEnumerable{System.String},System.Threading.CancellationToken)
  parent: OllamaSharp.Chat
  langs:
  - csharp
  - vb
  name: SendAsAsync(ChatRole, string, IEnumerable<string>?, CancellationToken)
  nameWithType: Chat.SendAsAsync(ChatRole, string, IEnumerable<string>?, CancellationToken)
  fullName: OllamaSharp.Chat.SendAsAsync(OllamaSharp.Models.Chat.ChatRole, string, System.Collections.Generic.IEnumerable<string>?, System.Threading.CancellationToken)
  type: Method
  source:
    remote:
      path: src/Chat.cs
      branch: feature/add-documentation
      repo: https://github.com/JerrettDavis/OllamaSharp.git
    id: SendAsAsync
    path: src/Chat.cs
    startLine: 195
  assemblies:
  - OllamaSharp
  namespace: OllamaSharp
  summary: Sends a message in a given role to the currently selected model and streams its response
  example: []
  syntax:
    content: public IAsyncEnumerable<string> SendAsAsync(ChatRole role, string message, IEnumerable<string>? imagesAsBase64, CancellationToken cancellationToken = default)
    parameters:
    - id: role
      type: OllamaSharp.Models.Chat.ChatRole
      description: The role in which the message should be sent
    - id: message
      type: System.String
      description: The message to send
    - id: imagesAsBase64
      type: System.Collections.Generic.IEnumerable{System.String}
      description: Base64 encoded images to send to the model
    - id: cancellationToken
      type: System.Threading.CancellationToken
      description: The token to cancel the operation with
    return:
      type: System.Collections.Generic.IAsyncEnumerable{System.String}
    content.vb: Public Function SendAsAsync(role As ChatRole, message As String, imagesAsBase64 As IEnumerable(Of String), cancellationToken As CancellationToken = Nothing) As IAsyncEnumerable(Of String)
  overload: OllamaSharp.Chat.SendAsAsync*
  nameWithType.vb: Chat.SendAsAsync(ChatRole, String, IEnumerable(Of String), CancellationToken)
  fullName.vb: OllamaSharp.Chat.SendAsAsync(OllamaSharp.Models.Chat.ChatRole, String, System.Collections.Generic.IEnumerable(Of String), System.Threading.CancellationToken)
  name.vb: SendAsAsync(ChatRole, String, IEnumerable(Of String), CancellationToken)
- uid: OllamaSharp.Chat.SendAsAsync(OllamaSharp.Models.Chat.ChatRole,System.String,System.Collections.Generic.IReadOnlyCollection{OllamaSharp.Models.Chat.Tool},System.Collections.Generic.IEnumerable{System.String},System.Threading.CancellationToken)
  commentId: M:OllamaSharp.Chat.SendAsAsync(OllamaSharp.Models.Chat.ChatRole,System.String,System.Collections.Generic.IReadOnlyCollection{OllamaSharp.Models.Chat.Tool},System.Collections.Generic.IEnumerable{System.String},System.Threading.CancellationToken)
  id: SendAsAsync(OllamaSharp.Models.Chat.ChatRole,System.String,System.Collections.Generic.IReadOnlyCollection{OllamaSharp.Models.Chat.Tool},System.Collections.Generic.IEnumerable{System.String},System.Threading.CancellationToken)
  parent: OllamaSharp.Chat
  langs:
  - csharp
  - vb
  name: SendAsAsync(ChatRole, string, IReadOnlyCollection<Tool>?, IEnumerable<string>?, CancellationToken)
  nameWithType: Chat.SendAsAsync(ChatRole, string, IReadOnlyCollection<Tool>?, IEnumerable<string>?, CancellationToken)
  fullName: OllamaSharp.Chat.SendAsAsync(OllamaSharp.Models.Chat.ChatRole, string, System.Collections.Generic.IReadOnlyCollection<OllamaSharp.Models.Chat.Tool>?, System.Collections.Generic.IEnumerable<string>?, System.Threading.CancellationToken)
  type: Method
  source:
    remote:
      path: src/Chat.cs
      branch: feature/add-documentation
      repo: https://github.com/JerrettDavis/OllamaSharp.git
    id: SendAsAsync
    path: src/Chat.cs
    startLine: 206
  assemblies:
  - OllamaSharp
  namespace: OllamaSharp
  summary: Sends a message in a given role to the currently selected model and streams its response
  example: []
  syntax:
    content: public IAsyncEnumerable<string> SendAsAsync(ChatRole role, string message, IReadOnlyCollection<Tool>? tools, IEnumerable<string>? imagesAsBase64 = null, CancellationToken cancellationToken = default)
    parameters:
    - id: role
      type: OllamaSharp.Models.Chat.ChatRole
      description: The role in which the message should be sent
    - id: message
      type: System.String
      description: The message to send
    - id: tools
      type: System.Collections.Generic.IReadOnlyCollection{OllamaSharp.Models.Chat.Tool}
      description: Tools that the model can make use of, see https://ollama.com/blog/tool-support. By using tools, response streaming is automatically turned off
    - id: imagesAsBase64
      type: System.Collections.Generic.IEnumerable{System.String}
      description: Base64 encoded images to send to the model
    - id: cancellationToken
      type: System.Threading.CancellationToken
      description: The token to cancel the operation with
    return:
      type: System.Collections.Generic.IAsyncEnumerable{System.String}
    content.vb: Public Function SendAsAsync(role As ChatRole, message As String, tools As IReadOnlyCollection(Of Tool), imagesAsBase64 As IEnumerable(Of String) = Nothing, cancellationToken As CancellationToken = Nothing) As IAsyncEnumerable(Of String)
  overload: OllamaSharp.Chat.SendAsAsync*
  nameWithType.vb: Chat.SendAsAsync(ChatRole, String, IReadOnlyCollection(Of Tool), IEnumerable(Of String), CancellationToken)
  fullName.vb: OllamaSharp.Chat.SendAsAsync(OllamaSharp.Models.Chat.ChatRole, String, System.Collections.Generic.IReadOnlyCollection(Of OllamaSharp.Models.Chat.Tool), System.Collections.Generic.IEnumerable(Of String), System.Threading.CancellationToken)
  name.vb: SendAsAsync(ChatRole, String, IReadOnlyCollection(Of Tool), IEnumerable(Of String), CancellationToken)
references:
- uid: OllamaSharp
  commentId: N:OllamaSharp
  href: OllamaSharp.html
  name: OllamaSharp
  nameWithType: OllamaSharp
  fullName: OllamaSharp
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object
  name: object
  nameWithType: object
  fullName: object
  nameWithType.vb: Object
  fullName.vb: Object
  name.vb: Object
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  name: Equals(object)
  nameWithType: object.Equals(object)
  fullName: object.Equals(object)
  nameWithType.vb: Object.Equals(Object)
  fullName.vb: Object.Equals(Object)
  name.vb: Equals(Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  name: Equals(object, object)
  nameWithType: object.Equals(object, object)
  fullName: object.Equals(object, object)
  nameWithType.vb: Object.Equals(Object, Object)
  fullName.vb: Object.Equals(Object, Object)
  name.vb: Equals(Object, Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  name: GetHashCode()
  nameWithType: object.GetHashCode()
  fullName: object.GetHashCode()
  nameWithType.vb: Object.GetHashCode()
  fullName.vb: Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  name: GetType()
  nameWithType: object.GetType()
  fullName: object.GetType()
  nameWithType.vb: Object.GetType()
  fullName.vb: Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  name: MemberwiseClone()
  nameWithType: object.MemberwiseClone()
  fullName: object.MemberwiseClone()
  nameWithType.vb: Object.MemberwiseClone()
  fullName.vb: Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - name: (
  - name: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  name: ReferenceEquals(object, object)
  nameWithType: object.ReferenceEquals(object, object)
  fullName: object.ReferenceEquals(object, object)
  nameWithType.vb: Object.ReferenceEquals(Object, Object)
  fullName.vb: Object.ReferenceEquals(Object, Object)
  name.vb: ReferenceEquals(Object, Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  name: ToString()
  nameWithType: object.ToString()
  fullName: object.ToString()
  nameWithType.vb: Object.ToString()
  fullName.vb: Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
- uid: System
  commentId: N:System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System
  nameWithType: System
  fullName: System
- uid: OllamaSharp.Chat.Messages*
  commentId: Overload:OllamaSharp.Chat.Messages
  href: OllamaSharp.Chat.html#OllamaSharp_Chat_Messages
  name: Messages
  nameWithType: Chat.Messages
  fullName: OllamaSharp.Chat.Messages
- uid: System.Collections.Generic.List{OllamaSharp.Models.Chat.Message}
  commentId: T:System.Collections.Generic.List{OllamaSharp.Models.Chat.Message}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.List`1
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1
  name: List<Message>
  nameWithType: List<Message>
  fullName: System.Collections.Generic.List<OllamaSharp.Models.Chat.Message>
  nameWithType.vb: List(Of Message)
  fullName.vb: System.Collections.Generic.List(Of OllamaSharp.Models.Chat.Message)
  name.vb: List(Of Message)
  spec.csharp:
  - uid: System.Collections.Generic.List`1
    name: List
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1
  - name: <
  - uid: OllamaSharp.Models.Chat.Message
    name: Message
    href: OllamaSharp.Models.Chat.Message.html
  - name: '>'
  spec.vb:
  - uid: System.Collections.Generic.List`1
    name: List
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1
  - name: (
  - name: Of
  - name: " "
  - uid: OllamaSharp.Models.Chat.Message
    name: Message
    href: OllamaSharp.Models.Chat.Message.html
  - name: )
- uid: System.Collections.Generic.List`1
  commentId: T:System.Collections.Generic.List`1
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1
  name: List<T>
  nameWithType: List<T>
  fullName: System.Collections.Generic.List<T>
  nameWithType.vb: List(Of T)
  fullName.vb: System.Collections.Generic.List(Of T)
  name.vb: List(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.List`1
    name: List
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1
  - name: <
  - name: T
  - name: '>'
  spec.vb:
  - uid: System.Collections.Generic.List`1
    name: List
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
- uid: System.Collections.Generic
  commentId: N:System.Collections.Generic
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System.Collections.Generic
  nameWithType: System.Collections.Generic
  fullName: System.Collections.Generic
  spec.csharp:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Collections
    name: Collections
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections
  - name: .
  - uid: System.Collections.Generic
    name: Generic
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic
  spec.vb:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Collections
    name: Collections
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections
  - name: .
  - uid: System.Collections.Generic
    name: Generic
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic
- uid: OllamaSharp.Chat.Client*
  commentId: Overload:OllamaSharp.Chat.Client
  href: OllamaSharp.Chat.html#OllamaSharp_Chat_Client
  name: Client
  nameWithType: Chat.Client
  fullName: OllamaSharp.Chat.Client
- uid: OllamaSharp.IOllamaApiClient
  commentId: T:OllamaSharp.IOllamaApiClient
  parent: OllamaSharp
  href: OllamaSharp.IOllamaApiClient.html
  name: IOllamaApiClient
  nameWithType: IOllamaApiClient
  fullName: OllamaSharp.IOllamaApiClient
- uid: OllamaSharp.Chat.Model*
  commentId: Overload:OllamaSharp.Chat.Model
  href: OllamaSharp.Chat.html#OllamaSharp_Chat_Model
  name: Model
  nameWithType: Chat.Model
  fullName: OllamaSharp.Chat.Model
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.string
  name: string
  nameWithType: string
  fullName: string
  nameWithType.vb: String
  fullName.vb: String
  name.vb: String
- uid: OllamaSharp.Chat.Options*
  commentId: Overload:OllamaSharp.Chat.Options
  href: OllamaSharp.Chat.html#OllamaSharp_Chat_Options
  name: Options
  nameWithType: Chat.Options
  fullName: OllamaSharp.Chat.Options
- uid: OllamaSharp.Models.RequestOptions
  commentId: T:OllamaSharp.Models.RequestOptions
  parent: OllamaSharp.Models
  href: OllamaSharp.Models.RequestOptions.html
  name: RequestOptions
  nameWithType: RequestOptions
  fullName: OllamaSharp.Models.RequestOptions
- uid: OllamaSharp.Models
  commentId: N:OllamaSharp.Models
  href: OllamaSharp.html
  name: OllamaSharp.Models
  nameWithType: OllamaSharp.Models
  fullName: OllamaSharp.Models
  spec.csharp:
  - uid: OllamaSharp
    name: OllamaSharp
    href: OllamaSharp.html
  - name: .
  - uid: OllamaSharp.Models
    name: Models
    href: OllamaSharp.Models.html
  spec.vb:
  - uid: OllamaSharp
    name: OllamaSharp
    href: OllamaSharp.html
  - name: .
  - uid: OllamaSharp.Models
    name: Models
    href: OllamaSharp.Models.html
- uid: System.ArgumentNullException
  commentId: T:System.ArgumentNullException
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.argumentnullexception
  name: ArgumentNullException
  nameWithType: ArgumentNullException
  fullName: System.ArgumentNullException
- uid: OllamaSharp.Chat.#ctor*
  commentId: Overload:OllamaSharp.Chat.#ctor
  href: OllamaSharp.Chat.html#OllamaSharp_Chat__ctor_OllamaSharp_IOllamaApiClient_System_String_
  name: Chat
  nameWithType: Chat.Chat
  fullName: OllamaSharp.Chat.Chat
  nameWithType.vb: Chat.New
  fullName.vb: OllamaSharp.Chat.New
  name.vb: New
- uid: System.Collections.Generic.IAsyncEnumerable`1
  commentId: T:System.Collections.Generic.IAsyncEnumerable`1
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.iasyncenumerable-1
  name: IAsyncEnumerable<T>
  nameWithType: IAsyncEnumerable<T>
  fullName: System.Collections.Generic.IAsyncEnumerable<T>
  nameWithType.vb: IAsyncEnumerable(Of T)
  fullName.vb: System.Collections.Generic.IAsyncEnumerable(Of T)
  name.vb: IAsyncEnumerable(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.IAsyncEnumerable`1
    name: IAsyncEnumerable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.iasyncenumerable-1
  - name: <
  - name: T
  - name: '>'
  spec.vb:
  - uid: System.Collections.Generic.IAsyncEnumerable`1
    name: IAsyncEnumerable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.iasyncenumerable-1
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
- uid: OllamaSharp.Chat.SendAsync*
  commentId: Overload:OllamaSharp.Chat.SendAsync
  href: OllamaSharp.Chat.html#OllamaSharp_Chat_SendAsync_System_String_System_Threading_CancellationToken_
  name: SendAsync
  nameWithType: Chat.SendAsync
  fullName: OllamaSharp.Chat.SendAsync
- uid: System.Threading.CancellationToken
  commentId: T:System.Threading.CancellationToken
  parent: System.Threading
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.threading.cancellationtoken
  name: CancellationToken
  nameWithType: CancellationToken
  fullName: System.Threading.CancellationToken
- uid: System.Collections.Generic.IAsyncEnumerable{System.String}
  commentId: T:System.Collections.Generic.IAsyncEnumerable{System.String}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IAsyncEnumerable`1
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.iasyncenumerable-1
  name: IAsyncEnumerable<string>
  nameWithType: IAsyncEnumerable<string>
  fullName: System.Collections.Generic.IAsyncEnumerable<string>
  nameWithType.vb: IAsyncEnumerable(Of String)
  fullName.vb: System.Collections.Generic.IAsyncEnumerable(Of String)
  name.vb: IAsyncEnumerable(Of String)
  spec.csharp:
  - uid: System.Collections.Generic.IAsyncEnumerable`1
    name: IAsyncEnumerable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.iasyncenumerable-1
  - name: <
  - uid: System.String
    name: string
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: '>'
  spec.vb:
  - uid: System.Collections.Generic.IAsyncEnumerable`1
    name: IAsyncEnumerable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.iasyncenumerable-1
  - name: (
  - name: Of
  - name: " "
  - uid: System.String
    name: String
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: )
- uid: System.Threading
  commentId: N:System.Threading
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System.Threading
  nameWithType: System.Threading
  fullName: System.Threading
  spec.csharp:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Threading
    name: Threading
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading
  spec.vb:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Threading
    name: Threading
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading
- uid: System.Collections.Generic.IEnumerable{System.Collections.Generic.IEnumerable{System.Byte}}
  commentId: T:System.Collections.Generic.IEnumerable{System.Collections.Generic.IEnumerable{System.Byte}}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IEnumerable`1
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  name: IEnumerable<IEnumerable<byte>>
  nameWithType: IEnumerable<IEnumerable<byte>>
  fullName: System.Collections.Generic.IEnumerable<System.Collections.Generic.IEnumerable<byte>>
  nameWithType.vb: IEnumerable(Of IEnumerable(Of Byte))
  fullName.vb: System.Collections.Generic.IEnumerable(Of System.Collections.Generic.IEnumerable(Of Byte))
  name.vb: IEnumerable(Of IEnumerable(Of Byte))
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  - name: <
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  - name: <
  - uid: System.Byte
    name: byte
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.byte
  - name: '>'
  - name: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  - name: (
  - name: Of
  - name: " "
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  - name: (
  - name: Of
  - name: " "
  - uid: System.Byte
    name: Byte
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.byte
  - name: )
  - name: )
- uid: System.Collections.Generic.IEnumerable`1
  commentId: T:System.Collections.Generic.IEnumerable`1
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  name: IEnumerable<T>
  nameWithType: IEnumerable<T>
  fullName: System.Collections.Generic.IEnumerable<T>
  nameWithType.vb: IEnumerable(Of T)
  fullName.vb: System.Collections.Generic.IEnumerable(Of T)
  name.vb: IEnumerable(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  - name: <
  - name: T
  - name: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
- uid: System.Collections.Generic.IEnumerable{System.String}
  commentId: T:System.Collections.Generic.IEnumerable{System.String}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IEnumerable`1
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  name: IEnumerable<string>
  nameWithType: IEnumerable<string>
  fullName: System.Collections.Generic.IEnumerable<string>
  nameWithType.vb: IEnumerable(Of String)
  fullName.vb: System.Collections.Generic.IEnumerable(Of String)
  name.vb: IEnumerable(Of String)
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  - name: <
  - uid: System.String
    name: string
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  - name: (
  - name: Of
  - name: " "
  - uid: System.String
    name: String
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: )
- uid: System.Collections.Generic.IReadOnlyCollection{OllamaSharp.Models.Chat.Tool}
  commentId: T:System.Collections.Generic.IReadOnlyCollection{OllamaSharp.Models.Chat.Tool}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IReadOnlyCollection`1
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ireadonlycollection-1
  name: IReadOnlyCollection<Tool>
  nameWithType: IReadOnlyCollection<Tool>
  fullName: System.Collections.Generic.IReadOnlyCollection<OllamaSharp.Models.Chat.Tool>
  nameWithType.vb: IReadOnlyCollection(Of Tool)
  fullName.vb: System.Collections.Generic.IReadOnlyCollection(Of OllamaSharp.Models.Chat.Tool)
  name.vb: IReadOnlyCollection(Of Tool)
  spec.csharp:
  - uid: System.Collections.Generic.IReadOnlyCollection`1
    name: IReadOnlyCollection
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ireadonlycollection-1
  - name: <
  - uid: OllamaSharp.Models.Chat.Tool
    name: Tool
    href: OllamaSharp.Models.Chat.Tool.html
  - name: '>'
  spec.vb:
  - uid: System.Collections.Generic.IReadOnlyCollection`1
    name: IReadOnlyCollection
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ireadonlycollection-1
  - name: (
  - name: Of
  - name: " "
  - uid: OllamaSharp.Models.Chat.Tool
    name: Tool
    href: OllamaSharp.Models.Chat.Tool.html
  - name: )
- uid: System.Collections.Generic.IReadOnlyCollection`1
  commentId: T:System.Collections.Generic.IReadOnlyCollection`1
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ireadonlycollection-1
  name: IReadOnlyCollection<T>
  nameWithType: IReadOnlyCollection<T>
  fullName: System.Collections.Generic.IReadOnlyCollection<T>
  nameWithType.vb: IReadOnlyCollection(Of T)
  fullName.vb: System.Collections.Generic.IReadOnlyCollection(Of T)
  name.vb: IReadOnlyCollection(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.IReadOnlyCollection`1
    name: IReadOnlyCollection
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ireadonlycollection-1
  - name: <
  - name: T
  - name: '>'
  spec.vb:
  - uid: System.Collections.Generic.IReadOnlyCollection`1
    name: IReadOnlyCollection
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ireadonlycollection-1
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
- uid: OllamaSharp.Chat.SendAsAsync*
  commentId: Overload:OllamaSharp.Chat.SendAsAsync
  href: OllamaSharp.Chat.html#OllamaSharp_Chat_SendAsAsync_OllamaSharp_Models_Chat_ChatRole_System_String_System_Threading_CancellationToken_
  name: SendAsAsync
  nameWithType: Chat.SendAsAsync
  fullName: OllamaSharp.Chat.SendAsAsync
- uid: OllamaSharp.Models.Chat.ChatRole
  commentId: T:OllamaSharp.Models.Chat.ChatRole
  parent: OllamaSharp.Models.Chat
  href: OllamaSharp.Models.Chat.ChatRole.html
  name: ChatRole
  nameWithType: ChatRole
  fullName: OllamaSharp.Models.Chat.ChatRole
- uid: OllamaSharp.Models.Chat
  commentId: N:OllamaSharp.Models.Chat
  href: OllamaSharp.html
  name: OllamaSharp.Models.Chat
  nameWithType: OllamaSharp.Models.Chat
  fullName: OllamaSharp.Models.Chat
  spec.csharp:
  - uid: OllamaSharp
    name: OllamaSharp
    href: OllamaSharp.html
  - name: .
  - uid: OllamaSharp.Models
    name: Models
    href: OllamaSharp.Models.html
  - name: .
  - uid: OllamaSharp.Models.Chat
    name: Chat
    href: OllamaSharp.Models.Chat.html
  spec.vb:
  - uid: OllamaSharp
    name: OllamaSharp
    href: OllamaSharp.html
  - name: .
  - uid: OllamaSharp.Models
    name: Models
    href: OllamaSharp.Models.html
  - name: .
  - uid: OllamaSharp.Models.Chat
    name: Chat
    href: OllamaSharp.Models.Chat.html
