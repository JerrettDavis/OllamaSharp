### YamlMime:ManagedReference
items:
- uid: OllamaSharp.AsyncEnumerableExtensions.IAppender`2
  commentId: T:OllamaSharp.AsyncEnumerableExtensions.IAppender`2
  id: IAppender`2
  parent: OllamaSharp.AsyncEnumerableExtensions
  children:
  - OllamaSharp.AsyncEnumerableExtensions.IAppender`2.Append(`0)
  - OllamaSharp.AsyncEnumerableExtensions.IAppender`2.Complete
  langs:
  - csharp
  - vb
  name: IAppender<Tin, Tout>
  nameWithType: IAppender<Tin, Tout>
  fullName: OllamaSharp.AsyncEnumerableExtensions.IAppender<Tin, Tout>
  type: Interface
  source:
    remote:
      path: src/AsyncEnumerableExtensions/IAppender.cs
      branch: feature/add-documentation
      repo: https://github.com/JerrettDavis/OllamaSharp.git
    id: IAppender
    path: src/AsyncEnumerableExtensions/IAppender.cs
    startLine: 7
  assemblies:
  - OllamaSharp
  namespace: OllamaSharp.AsyncEnumerableExtensions
  summary: Interface to append items while streaming an IAsyncEnumerable to the end
  example: []
  syntax:
    content: public interface IAppender<in Tin, out Tout>
    typeParameters:
    - id: Tin
      description: The type of the items of the IAsyncEnumerable
    - id: Tout
      description: The return type after the IAsyncEnumerable was streamed to the end
    content.vb: Public Interface IAppender(Of In Tin, Out Tout)
  nameWithType.vb: IAppender(Of Tin, Tout)
  fullName.vb: OllamaSharp.AsyncEnumerableExtensions.IAppender(Of Tin, Tout)
  name.vb: IAppender(Of Tin, Tout)
- uid: OllamaSharp.AsyncEnumerableExtensions.IAppender`2.Append(`0)
  commentId: M:OllamaSharp.AsyncEnumerableExtensions.IAppender`2.Append(`0)
  id: Append(`0)
  parent: OllamaSharp.AsyncEnumerableExtensions.IAppender`2
  langs:
  - csharp
  - vb
  name: Append(Tin)
  nameWithType: IAppender<Tin, Tout>.Append(Tin)
  fullName: OllamaSharp.AsyncEnumerableExtensions.IAppender<Tin, Tout>.Append(Tin)
  type: Method
  source:
    remote:
      path: src/AsyncEnumerableExtensions/IAppender.cs
      branch: feature/add-documentation
      repo: https://github.com/JerrettDavis/OllamaSharp.git
    id: Append
    path: src/AsyncEnumerableExtensions/IAppender.cs
    startLine: 13
  assemblies:
  - OllamaSharp
  namespace: OllamaSharp.AsyncEnumerableExtensions
  summary: Appends an item to build up the return value
  example: []
  syntax:
    content: void Append(Tin item)
    parameters:
    - id: item
      type: '{Tin}'
      description: The item to append
    content.vb: Sub Append(item As Tin)
  overload: OllamaSharp.AsyncEnumerableExtensions.IAppender`2.Append*
  nameWithType.vb: IAppender(Of Tin, Tout).Append(Tin)
  fullName.vb: OllamaSharp.AsyncEnumerableExtensions.IAppender(Of Tin, Tout).Append(Tin)
- uid: OllamaSharp.AsyncEnumerableExtensions.IAppender`2.Complete
  commentId: M:OllamaSharp.AsyncEnumerableExtensions.IAppender`2.Complete
  id: Complete
  parent: OllamaSharp.AsyncEnumerableExtensions.IAppender`2
  langs:
  - csharp
  - vb
  name: Complete()
  nameWithType: IAppender<Tin, Tout>.Complete()
  fullName: OllamaSharp.AsyncEnumerableExtensions.IAppender<Tin, Tout>.Complete()
  type: Method
  source:
    remote:
      path: src/AsyncEnumerableExtensions/IAppender.cs
      branch: feature/add-documentation
      repo: https://github.com/JerrettDavis/OllamaSharp.git
    id: Complete
    path: src/AsyncEnumerableExtensions/IAppender.cs
    startLine: 18
  assemblies:
  - OllamaSharp
  namespace: OllamaSharp.AsyncEnumerableExtensions
  summary: Completes and returns the return value built up from the appended items
  example: []
  syntax:
    content: Tout Complete()
    return:
      type: '{Tout}'
    content.vb: Function Complete() As Tout
  overload: OllamaSharp.AsyncEnumerableExtensions.IAppender`2.Complete*
  nameWithType.vb: IAppender(Of Tin, Tout).Complete()
  fullName.vb: OllamaSharp.AsyncEnumerableExtensions.IAppender(Of Tin, Tout).Complete()
references:
- uid: OllamaSharp.AsyncEnumerableExtensions
  commentId: N:OllamaSharp.AsyncEnumerableExtensions
  href: OllamaSharp.html
  name: OllamaSharp.AsyncEnumerableExtensions
  nameWithType: OllamaSharp.AsyncEnumerableExtensions
  fullName: OllamaSharp.AsyncEnumerableExtensions
  spec.csharp:
  - uid: OllamaSharp
    name: OllamaSharp
    href: OllamaSharp.html
  - name: .
  - uid: OllamaSharp.AsyncEnumerableExtensions
    name: AsyncEnumerableExtensions
    href: OllamaSharp.AsyncEnumerableExtensions.html
  spec.vb:
  - uid: OllamaSharp
    name: OllamaSharp
    href: OllamaSharp.html
  - name: .
  - uid: OllamaSharp.AsyncEnumerableExtensions
    name: AsyncEnumerableExtensions
    href: OllamaSharp.AsyncEnumerableExtensions.html
- uid: OllamaSharp.AsyncEnumerableExtensions.IAppender`2.Append*
  commentId: Overload:OllamaSharp.AsyncEnumerableExtensions.IAppender`2.Append
  href: OllamaSharp.AsyncEnumerableExtensions.IAppender-2.html#OllamaSharp_AsyncEnumerableExtensions_IAppender_2_Append__0_
  name: Append
  nameWithType: IAppender<Tin, Tout>.Append
  fullName: OllamaSharp.AsyncEnumerableExtensions.IAppender<Tin, Tout>.Append
  nameWithType.vb: IAppender(Of Tin, Tout).Append
  fullName.vb: OllamaSharp.AsyncEnumerableExtensions.IAppender(Of Tin, Tout).Append
- uid: '{Tin}'
  commentId: '!:Tin'
  definition: Tin
  name: Tin
  nameWithType: Tin
  fullName: Tin
- uid: Tin
  commentId: '!:Tin'
  name: Tin
  nameWithType: Tin
  fullName: Tin
- uid: OllamaSharp.AsyncEnumerableExtensions.IAppender`2.Complete*
  commentId: Overload:OllamaSharp.AsyncEnumerableExtensions.IAppender`2.Complete
  href: OllamaSharp.AsyncEnumerableExtensions.IAppender-2.html#OllamaSharp_AsyncEnumerableExtensions_IAppender_2_Complete
  name: Complete
  nameWithType: IAppender<Tin, Tout>.Complete
  fullName: OllamaSharp.AsyncEnumerableExtensions.IAppender<Tin, Tout>.Complete
  nameWithType.vb: IAppender(Of Tin, Tout).Complete
  fullName.vb: OllamaSharp.AsyncEnumerableExtensions.IAppender(Of Tin, Tout).Complete
- uid: '{Tout}'
  commentId: '!:Tout'
  definition: Tout
  name: Tout
  nameWithType: Tout
  fullName: Tout
- uid: Tout
  commentId: '!:Tout'
  name: Tout
  nameWithType: Tout
  fullName: Tout
